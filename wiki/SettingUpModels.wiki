#summary how to define indexer for certain model
#labels Phase-Deploy

Before continue reading, make sure that you already have setup the Djapian project (SettingUp)

= Introduction =
In order to set who must be indexed, you have to add some lines into your `models.py` (or separate file named [IndexersAutodiscovery index.py]), just like follows.

Lets get this model as example:

{{{
from django.db import models

class Page(models.Model):
    title = models.CharField()
    content = models.TextField()
}}}

To index this model, you have to create an `djapian.indexer.Indexer` instance, but first, lets import the class:

{{{
from django.db import models
import djapian 
}}}

And now, we create the `Indexer` sublass (but, just after the `class Page`):
{{{
class Page(models.Model):
    title = models.CharField()
    content = models.TextField()

class PageIndexer(djapian.Indexer):
    fields = [
        'title',
        'content'
    ] # The fields in the model to index
    tags = [ # The prefixed fields, more information in IndexerClass page
        ('title','title')
    ]

djapian.add_index(Page, PageIndexer, attach_as="indexer")
}}}

Look at IndexerClass to advanced configuration of `Indexer` class.

*Note*: You can use same `Indexer` class with different models.

After configure the `models.py`, you can put the whole thing to work by RunningTheIndexer